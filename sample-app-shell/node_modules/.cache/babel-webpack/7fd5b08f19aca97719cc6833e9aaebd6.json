{"ast":null,"code":"import _createClass from \"C:/Users/akasha/Downloads/sample-micro-frontend-project/sample-app-shell/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/akasha/Downloads/sample-micro-frontend-project/sample-app-shell/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { InjectionToken, ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdefineNgModule, ɵɵdefineInjector, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nvar InjectionTokens = function InjectionTokens() {\n  _classCallCheck(this, InjectionTokens);\n};\n\nInjectionTokens.messagingServiceInjectionToken = new InjectionToken('MessagingService');\n\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService() {\n    _classCallCheck(this, MessagingService);\n\n    // Observable Source\n    this.messageToFeature1Source = new BehaviorSubject(undefined); // Observable Streams\n\n    this.messageToFeature1$ = this.messageToFeature1Source.asObservable();\n  } // Message Commands\n\n\n  _createClass(MessagingService, [{\n    key: \"messageToFeature1\",\n    value: function messageToFeature1(message) {\n      this.messageToFeature1Source.next(message);\n    }\n  }]);\n\n  return MessagingService;\n}();\n\nMessagingService.ɵfac = function MessagingService_Factory(t) {\n  return new (t || MessagingService)();\n};\n\nMessagingService.ɵprov = ɵɵdefineInjectable({\n  token: MessagingService,\n  factory: MessagingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵsetClassMetadata(MessagingService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar MessageBusModule = /*#__PURE__*/function () {\n  function MessageBusModule() {\n    _classCallCheck(this, MessageBusModule);\n  }\n\n  _createClass(MessageBusModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot() {\n      return {\n        ngModule: MessageBusModule,\n        providers: [{\n          provide: InjectionTokens.messagingServiceInjectionToken,\n          useClass: MessagingService\n        }]\n      };\n    }\n  }]);\n\n  return MessageBusModule;\n}();\n\nMessageBusModule.ɵmod = ɵɵdefineNgModule({\n  type: MessageBusModule\n});\nMessageBusModule.ɵinj = ɵɵdefineInjector({\n  factory: function MessageBusModule_Factory(t) {\n    return new (t || MessageBusModule)();\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵsetClassMetadata(MessageBusModule, [{\n    type: NgModule,\n    args: [{\n      declarations: []\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of cross-cutting-concern\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { InjectionTokens, MessageBusModule, MessagingService };","map":{"version":3,"sources":["../../projects/cross-cutting-concern/src/lib/message-bus/messaging.contract.ts","../../projects/cross-cutting-concern/src/lib/message-bus/messaging.service.ts","../../projects/cross-cutting-concern/src/lib/message-bus/message-bus.module.ts","../../projects/cross-cutting-concern/src/public-api.ts"],"names":[],"mappings":";;;;;IAEM,e;;;;AACG,eAAA,CAAA,8BAAA,GAAiC,IAAI,cAAJ,CAAmB,kBAAnB,CAAjC;;ICEI,gB;AADb,8BAAA;AAAA;;;AAGU,SAAA,uBAAA,GAA0B,IAAI,eAAJ,CAAoD,SAApD,CAA1B,CAHV,C;;AAKS,SAAA,kBAAA,GAAqB,KAAK,uBAAL,CAA6B,YAA7B,EAArB;AAKR,G;;;;;WAHQ,2BAAkB,OAAlB,EAA6C;AAClD,WAAK,uBAAL,CAA6B,IAA7B,CAAkC,OAAlC;AACD;;;;;;;mBARU,gB;AAAgB,C;;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA;;;;uEAAhB,gB,EAAgB,CAAA;UAD5B;AAC4B,GAAA,C;;;ICGhB,gB;;;;;;;WACX,mBAAc;AACZ,aAAO;AACL,QAAA,QAAQ,EAAE,gBADL;AAEL,QAAA,SAAS,EAAE,CACT;AACE,UAAA,OAAO,EAAE,eAAe,CAAC,8BAD3B;AAEE,UAAA,QAAQ,EAAE;AAFZ,SADS;AAFN,OAAP;AASD;;;;;;;QAXU;;;;qBAAA,gB;AAAgB;;;;uEAAhB,gB,EAAgB,CAAA;UAH5B,QAG4B;WAHnB;AACR,MAAA,YAAY,EAAE;AADN,K;AAGmB,GAAA,C;;ACR7B;;;;AAAA","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nclass InjectionTokens {\n  static messagingServiceInjectionToken = new InjectionToken('MessagingService');\n}\n\n\ninterface IMessageToFeature1 {\n  messageText: string;\n  messageTime: Date;\n}\n\nexport {\n  IMessageToFeature1,\n  InjectionTokens\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IMessageToFeature1 } from './messaging.contract';\n\n@Injectable()\nexport class MessagingService {\n  // Observable Source\n  private messageToFeature1Source = new BehaviorSubject<IMessageToFeature1 | undefined>(undefined);\n  // Observable Streams\n  public messageToFeature1$ = this.messageToFeature1Source.asObservable();\n  // Message Commands\n  public messageToFeature1(message: IMessageToFeature1): void {\n    this.messageToFeature1Source.next(message);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagingService } from './messaging.service';\nimport { InjectionTokens} from './messaging.contract';\n\n@NgModule({\n  declarations: []\n})\nexport class MessageBusModule {\n  static forRoot(): ModuleWithProviders<MessageBusModule> {\n    return {\n      ngModule: MessageBusModule,\n      providers: [\n        {\n          provide: InjectionTokens.messagingServiceInjectionToken,\n          useClass: MessagingService\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of cross-cutting-concern\n */\n\nexport * from './lib/message-bus/index';\n"]},"metadata":{},"sourceType":"module"}